% Reset sounds
clear sound; 
clc;
close all;
clear all;

% Recebe os dados
[filename path] = uigetfile('*', 'Select voice file');
voice.path = strcat(path, filename);
[voice.audiodata, voice.Fs] = audioread(voice.path);
voice.player = audioplayer(voice.audiodata, voice.Fs);

[filename path] = uigetfile('*', 'Select voice file');
music.path = strcat(path, filename);
[music.audiodata, music.Fs] = audioread(music.path); % audiodata is the a matrix mxn where n is the number of channels
music.player = audioplayer(music.audiodata, music.Fs);

% Dados dos sinais
voice.number_of_samples = size(voice.audiodata, 1);
f
fprintf('Tempo de duração: %g\n')
music.number_of_samples = size(music.audiodata, 1);


% Entrada de sons
fprintf('SELECT\nG - Play\nP - Pause\nR - Resume\nS - Stop\n\n')
while 1
    switch input('choice: ', 's')
        case 'G'
            play(voice.player);
        case 'P'
            pause(voice.player);
        case 'R'
            resume(voice.player);
        case 'S'
            stop(voice.player);
            break;
    end
end


function info(title, audio)
    fprintf('%s', title);
    fprintf('\tNúmero de amostras no audio: ', amostras = length(audio.audiodata));
    fprintf('\tTaxa de amostragem em Hz: ', audio.Fs); % a cada 1 segundo tem Fs amostras -> amostras/seg
    fprintf('\tTempo de duração', a); %(amostras)*(seg/amostras) = seg -> amostras*1/Fs
end
